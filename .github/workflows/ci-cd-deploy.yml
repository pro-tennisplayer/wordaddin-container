name: CI/CD Pipeline - Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: apex-mvp
  REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha,prefix={{branch}}-
          type=ref,event=branch
          type=ref,event=pr
          latest
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to Azure Web App
      if: github.ref == 'refs/heads/main'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.APP_NAME }}
        resource-group-name: ${{ secrets.RESOURCE_GROUP }}
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        
    - name: Update Web App Configuration
      if: github.ref == 'refs/heads/main'
      run: |
        az webapp config appsettings set \
          --name ${{ secrets.APP_NAME }} \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --settings \
          POSTGRES_CONNECTION="${{ secrets.POSTGRES_CONNECTION }}" \
          WEBSITES_PORT="8080"
          
    - name: Restart Web App
      if: github.ref == 'refs/heads/main'
      run: |
        az webapp restart \
          --name ${{ secrets.APP_NAME }} \
          --resource-group ${{ secrets.RESOURCE_GROUP }}
          
    - name: Health Check
      if: github.ref == 'refs/heads/main'
      run: |
        # Wait for deployment to complete
        sleep 60
        
        # Get the web app URL
        WEBAPP_URL=$(az webapp show \
          --name ${{ secrets.APP_NAME }} \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --query "defaultHostName" \
          --output tsv)
          
        # Test health endpoint
        curl -f "https://$WEBAPP_URL/health" || exit 1
        
    - name: Deployment Summary
      if: github.ref == 'refs/heads/main'
      run: |
        echo "## ðŸš€ Deployment Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Web App**: ${{ secrets.APP_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Resource Group**: ${{ secrets.RESOURCE_GROUP }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
